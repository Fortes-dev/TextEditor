/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.editortexto;

import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author CarlosFortesMedina
 */
public class Window extends javax.swing.JFrame {

    /**
     * Variables globales para el funcionamiento del programa.
     */
    static String ARCHIVO_NAME;
    static File ARCHIVO;
    static String TEXT_AREA;

    /**
     * Creates new form Ventana
     */
    public Window() {
        initComponents();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        FileChooser.setFileFilter(filter);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameFileChooser = new javax.swing.JFrame();
        FileChooser = new javax.swing.JFileChooser();
        frameFormat = new javax.swing.JFrame();
        jPanel4 = new javax.swing.JPanel();
        String[] fonts = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
        fontcombobox = new javax.swing.JComboBox<>(fonts);
        jPanel5 = new javax.swing.JPanel();
        colorChooser = new javax.swing.JColorChooser();
        jPanel3 = new javax.swing.JPanel();
        FontSize = new javax.swing.JLabel();
        fontSizeSpinner = new javax.swing.JSpinner();
        FontType = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textPane = new javax.swing.JTextPane();
        jPanel2 = new javax.swing.JPanel();
        textPath = new javax.swing.JLabel();
        textLength = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuItemNewFile = new javax.swing.JMenuItem();
        menuItemLoad = new javax.swing.JMenuItem();
        menuItemSave = new javax.swing.JMenuItem();
        menuItemSaveAs = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuItemClose = new javax.swing.JMenuItem();
        menuFormat = new javax.swing.JMenu();
        menuItemFont = new javax.swing.JMenuItem();
        menuInfo = new javax.swing.JMenu();
        menuItemAboutMe = new javax.swing.JMenuItem();

        frameFileChooser.getContentPane().add(FileChooser, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fontcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(fontcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel5.setLayout(new java.awt.BorderLayout());
        jPanel5.add(colorChooser, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.CardLayout());

        FontSize.setText("Font size");

        FontType.setText("Font Type");

        javax.swing.GroupLayout frameFormatLayout = new javax.swing.GroupLayout(frameFormat.getContentPane());
        frameFormat.getContentPane().setLayout(frameFormatLayout);
        frameFormatLayout.setHorizontalGroup(
            frameFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frameFormatLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(frameFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FontType))
                .addGroup(frameFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frameFormatLayout.createSequentialGroup()
                        .addGap(371, 371, 371)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(frameFormatLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(frameFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FontSize, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fontSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        frameFormatLayout.setVerticalGroup(
            frameFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameFormatLayout.createSequentialGroup()
                .addGroup(frameFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frameFormatLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(frameFormatLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(frameFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FontSize)
                            .addComponent(FontType))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(frameFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fontSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        textPane.setMargin(new java.awt.Insets(0, 0, 0, 0));
        textPane.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textPaneKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(textPane);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        textPath.setText("Ubicacion");
        jPanel2.add(textPath, java.awt.BorderLayout.WEST);

        textLength.setText("Tama√±o");
        jPanel2.add(textLength, java.awt.BorderLayout.EAST);

        menuFile.setText("File");

        menuItemNewFile.setText("New File");
        menuItemNewFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemNewFileActionPerformed(evt);
            }
        });
        menuFile.add(menuItemNewFile);

        menuItemLoad.setText("Load");
        menuItemLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemLoadActionPerformed(evt);
            }
        });
        menuFile.add(menuItemLoad);

        menuItemSave.setText("Save");
        menuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSaveActionPerformed(evt);
            }
        });
        menuFile.add(menuItemSave);

        menuItemSaveAs.setText("Save as");
        menuItemSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSaveAsActionPerformed(evt);
            }
        });
        menuFile.add(menuItemSaveAs);
        menuFile.add(jSeparator1);

        menuItemClose.setText("Close");
        menuItemClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCloseActionPerformed(evt);
            }
        });
        menuFile.add(menuItemClose);

        jMenuBar1.add(menuFile);

        menuFormat.setText("Edit");

        menuItemFont.setText("Format");
        menuItemFont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemFontActionPerformed(evt);
            }
        });
        menuFormat.add(menuItemFont);

        jMenuBar1.add(menuFormat);

        menuInfo.setText("Info");

        menuItemAboutMe.setText("About me");
        menuItemAboutMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAboutMeActionPerformed(evt);
            }
        });
        menuInfo.add(menuItemAboutMe);

        jMenuBar1.add(menuInfo);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Carga un archivo de texto
     * @param evt 
     */
    private void menuItemLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemLoadActionPerformed

        int status = FileChooser.showOpenDialog(null);
        String textoEntero = "";
        String linea = "";
        if (status == 0) {
            ARCHIVO = FileChooser.getSelectedFile();
            textPath.setText(ARCHIVO.getPath());

            try {
                BufferedReader lector = new BufferedReader(new FileReader(FileChooser.getSelectedFile()));
                while ((linea = lector.readLine()) != null) {
                    textoEntero += linea;
                }
                if (lector.readLine() == null) {
                    TEXT_AREA = textoEntero;
                }
                textPane.setText(TEXT_AREA);
                Integer length = TEXT_AREA.length();
                textLength.setText("Chars: " + length.toString());
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
                textPane.setText("No se ha podido abrir el archivo");
            } catch (IOException ex) {
                Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_menuItemLoadActionPerformed

    /**
     * Cierra el programa
     * @param evt 
     */
    private void menuItemCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuItemCloseActionPerformed

    /**
     * Guarda el archivo usando un FileChooser.
     * @param evt 
     */
    private void menuItemSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSaveAsActionPerformed
        
        PrintWriter print = null;

        int status = FileChooser.showSaveDialog(null);
        if (status == 0) {
            try {
                ARCHIVO = FileChooser.getSelectedFile();
                print = new PrintWriter(ARCHIVO);
                print.write(textPane.getText());
                print.close();
                textPath.setText(FileChooser.getSelectedFile().getPath());

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_menuItemSaveAsActionPerformed

    /**
     * Guarda el archivo en la ubicacion del mismo
     * Si no tiene ubicacion, lo guarda en la carpeta del proyecto
     * @param evt 
     */
    private void menuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSaveActionPerformed

        FileWriter fw = null;

        if (ARCHIVO == null) {
            ARCHIVO_NAME = JOptionPane.showInputDialog(rootPane, "Introduzca el nombre del archivo a guardar", "No existe un archivo", HEIGHT);
            File file = new File(ARCHIVO_NAME);
            if (ARCHIVO_NAME != null) {
                try {
                    ARCHIVO = file;
                    fw = new FileWriter(ARCHIVO);
                    fw.write(textPane.getText());
                    fw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(rootPane, "El archivo se ha guardado! :)");
                textPath.setText(file.getAbsolutePath());
            }
        } else {
            try {
                fw = new FileWriter(ARCHIVO);
                fw.write(textPane.getText());
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(rootPane, "El archivo se ha guardado! :)");
        }

    }//GEN-LAST:event_menuItemSaveActionPerformed


    /**
     * Muestra info del autor del programa
     * @param evt 
     */
    private void menuItemAboutMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAboutMeActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Tarea realizada by Carlos Fortes Medina", "Editor de texto", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_menuItemAboutMeActionPerformed

    /**
     * Crea un nuevo archivo vacio en la ubicacion del proyecto
     * @param evt 
     */
    private void menuItemNewFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemNewFileActionPerformed
        File file = new File("NewFile.txt");
        FileWriter fw = null;
        try {
            ARCHIVO = file;
            fw = new FileWriter(ARCHIVO);
            fw.write("");
            fw.close();
            textPath.setText(ARCHIVO.getAbsolutePath());
            textPane.setText(null);
            textLength.setText("Chars: " + 0);
        } catch (IOException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuItemNewFileActionPerformed

    /**
     * Maneja todo el formato del texto
     * @param evt 
     */
    private void menuItemFontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemFontActionPerformed
        frameFormat.setResizable(false);
        frameFormat.setSize(600, 400);
        frameFormat.setVisible(true);

        if (fontSizeSpinner.getValue().equals(0)) {
            fontSizeSpinner.setValue(12);
        }

        fontSizeSpinner.addChangeListener((ChangeEvent e) -> {
            textPane.setFont(new Font(textPane.getFont().getFamily(), Font.PLAIN, (int) fontSizeSpinner.getValue()));
        });

        colorChooser.getSelectionModel().addChangeListener((ChangeEvent e) -> {
            Color color = colorChooser.getColor();
            textPane.setForeground(color);
        });

        fontcombobox.addActionListener((ActionEvent e) -> {
            textPane.setFont(new Font((String) fontcombobox.getSelectedItem(), Font.PLAIN, (int) fontSizeSpinner.getValue()));
        });


    }//GEN-LAST:event_menuItemFontActionPerformed

    /**
     * Muestra la longitud del archivo en Chars actualizandolo en tiempo real
     * @param evt 
     */
    private void textPaneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textPaneKeyTyped
        textLength.setText("Chars: " + textPane.getText().length());

    }//GEN-LAST:event_textPaneKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JLabel FontSize;
    private javax.swing.JLabel FontType;
    private javax.swing.JColorChooser colorChooser;
    private javax.swing.JSpinner fontSizeSpinner;
    private javax.swing.JComboBox<String> fontcombobox;
    private javax.swing.JFrame frameFileChooser;
    private javax.swing.JFrame frameFormat;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuFormat;
    private javax.swing.JMenu menuInfo;
    private javax.swing.JMenuItem menuItemAboutMe;
    private javax.swing.JMenuItem menuItemClose;
    private javax.swing.JMenuItem menuItemFont;
    private javax.swing.JMenuItem menuItemLoad;
    private javax.swing.JMenuItem menuItemNewFile;
    private javax.swing.JMenuItem menuItemSave;
    private javax.swing.JMenuItem menuItemSaveAs;
    private javax.swing.JLabel textLength;
    private javax.swing.JTextPane textPane;
    private javax.swing.JLabel textPath;
    // End of variables declaration//GEN-END:variables
}
